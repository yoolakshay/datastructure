#include <stdio.h>
#include <stdlib.h>
#define SIZE 100
typedef struct PriorityQueue
{
    int element;
    int priority;
} PQueue;
PQueue pq[SIZE];
int front = -1;
rear = -1;
int isEmpty()
{
    return (front == -1) ? 1 : 0;
}
int isFull()
{
    return (rear == SIZE - 1) ? 1 : 0;
}

void enqueue(int data, int priority)
{
    rear = rear + 1;
    pq[rear].element = data;
    pq[rear].priority = priority;
    if (front == -1)
        front = rear;
    printf("Element inserted !!!\n");
}
int getHigherPriorityElement()
{
    int max = 0, index = -1;
    for (int i = front; i <= rear; i++)
    {
        if (pq[i].priority > max)
        {
            max = pq[i].priority;
            index = i;
        }
    }
    return index;
}
int dequeue()
{
    int index = getHigherPriorityElement();
    int data = pq[index].element;
    // for(int i=index; i<rear;i++){
    //     pq[i]=pq[i+1];
    // }
    // rear--;
    // if (rear < front)
    //     front = rear = -1;
    // return data;
    if (index == front && index == rear)
        front = rear = -1;
    else if (index == front)
        front++;
    else if (index == rear)
        rear--;
    else
    {
        for (int i = index; i < rear; i++)
        {
            pq[i] = pq[i + 1];
        }
        rear--;
    }
    return data;
}
int peek()
{
    int i = getHigherPriorityElement();
    printf("Element : %d => Priority : %d\n", pq[i].element, pq[i].priority);
    return pq[i].element;
}
void display()
{
    printf("Elements of priority queue are : \n");
    for (int i = front; i <= rear; i++)
    {
        printf("Element : %d => Priority : %d\n", pq[i].element, pq[i].priority);
    }
}
int main()
{
    system("cls");
    int data, p;
    while (1)
    {
        printf("1. Enqueue\n2. Dequeue\n3. Peek\n4. Display\n5. Exit\n");
        int choice;
        printf("Enter your choice: ");
        scanf("%d", &choice);
        switch (choice)
        {
        case 1:
            if (isFull())
            {
                printf("Queue overflow !!!\n");
            }
            else
            {
                printf("E Element : ");
                scanf("%d", &data);
                printf("Element Priority : ");
                scanf("%d", &p);
                enqueue(data, p);
            }
            break;
        case 2:
            if (isEmpty())
            {
                printf("Queue underflow !!!\n");
            }
            else
            {
                printf("%d dequeued from the queue \n", dequeue());
            }
            break;
        case 3:
            if (isEmpty())
            {
                printf("Queue underflow !!!\n");
            }
            else
            {
                printf("Element having higher priority is %d \n", peek());
            }
            break;
        case 4:
            display();
            break;
        case 5:
            exit(0);
            break;
        default:
            printf("Invalid choice\n");
            break;
        }
    }
    return 0;
}
